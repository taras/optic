---
source: workspaces/optic-engine-native/tests/bug-scenarios.rs
expression: "Dot::with_config(&spec_projection.shape().graph, &[])"
---
digraph {
    0 [ label = "CoreShape(\l    CoreShapeNode {\l        shape_id: \"$string\",\l        descriptor: CoreShapeNodeDescriptor {\l            kind: StringKind,\l        },\l    },\l)\l" ]
    1 [ label = "CoreShape(\l    CoreShapeNode {\l        shape_id: \"$number\",\l        descriptor: CoreShapeNodeDescriptor {\l            kind: NumberKind,\l        },\l    },\l)\l" ]
    2 [ label = "CoreShape(\l    CoreShapeNode {\l        shape_id: \"$boolean\",\l        descriptor: CoreShapeNodeDescriptor {\l            kind: BooleanKind,\l        },\l    },\l)\l" ]
    3 [ label = "CoreShape(\l    CoreShapeNode {\l        shape_id: \"$list\",\l        descriptor: CoreShapeNodeDescriptor {\l            kind: ListKind,\l        },\l    },\l)\l" ]
    4 [ label = "ShapeParameter(\l    ShapeParameterNode {\l        parameter_id: \"$listItem\",\l        descriptor: ShapeParameterNodeDescriptor,\l    },\l)\l" ]
    5 [ label = "CoreShape(\l    CoreShapeNode {\l        shape_id: \"$object\",\l        descriptor: CoreShapeNodeDescriptor {\l            kind: ObjectKind,\l        },\l    },\l)\l" ]
    6 [ label = "CoreShape(\l    CoreShapeNode {\l        shape_id: \"$nullable\",\l        descriptor: CoreShapeNodeDescriptor {\l            kind: NullableKind,\l        },\l    },\l)\l" ]
    7 [ label = "ShapeParameter(\l    ShapeParameterNode {\l        parameter_id: \"$nullableInner\",\l        descriptor: ShapeParameterNodeDescriptor,\l    },\l)\l" ]
    8 [ label = "CoreShape(\l    CoreShapeNode {\l        shape_id: \"$unknown\",\l        descriptor: CoreShapeNodeDescriptor {\l            kind: UnknownKind,\l        },\l    },\l)\l" ]
    9 [ label = "CoreShape(\l    CoreShapeNode {\l        shape_id: \"$optional\",\l        descriptor: CoreShapeNodeDescriptor {\l            kind: OptionalKind,\l        },\l    },\l)\l" ]
    10 [ label = "ShapeParameter(\l    ShapeParameterNode {\l        parameter_id: \"$optionalInner\",\l        descriptor: ShapeParameterNodeDescriptor,\l    },\l)\l" ]
    11 [ label = "CoreShape(\l    CoreShapeNode {\l        shape_id: \"$oneOf\",\l        descriptor: CoreShapeNodeDescriptor {\l            kind: OneOfKind,\l        },\l    },\l)\l" ]
    12 [ label = "BatchCommit(\l    BatchCommitNode {\l        batch_id: \"db99cd00-746a-4a43-b117-6adc53f24291\",\l        created_at: \"2020-11-06T15:44:29.194Z\",\l    },\l)\l" ]
    13 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_QDWTCba6JM\",\l    },\l)\l" ]
    14 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_eaAktz66rY\",\l    },\l)\l" ]
    15 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_pQvxnF8pzK\",\l    },\l)\l" ]
    16 [ label = "Field(\l    FieldNode {\l        field_id: \"field_Tubl0dSyKp\",\l        descriptor: FieldNodeDescriptor {\l            name: \"driverId\",\l        },\l    },\l)\l" ]
    17 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_xjqKoYgnH6\",\l    },\l)\l" ]
    18 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_iJajSC9l5W\",\l    },\l)\l" ]
    19 [ label = "Field(\l    FieldNode {\l        field_id: \"field_ZgQow0SS6x\",\l        descriptor: FieldNodeDescriptor {\l            name: \"driverId\",\l        },\l    },\l)\l" ]
    20 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_p5uOLpFNK8\",\l    },\l)\l" ]
    21 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_lhl794TnL5\",\l    },\l)\l" ]
    22 [ label = "Field(\l    FieldNode {\l        field_id: \"field_dcJtyX4lH0\",\l        descriptor: FieldNodeDescriptor {\l            name: \"rating\",\l        },\l    },\l)\l" ]
    23 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_GgIZ9GsJQm\",\l    },\l)\l" ]
    24 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_Z4UKWHMaIx\",\l    },\l)\l" ]
    25 [ label = "Field(\l    FieldNode {\l        field_id: \"field_m1iuljZLRJ\",\l        descriptor: FieldNodeDescriptor {\l            name: \"error\",\l        },\l    },\l)\l" ]
    26 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_tavNflZKsw\",\l    },\l)\l" ]
    27 [ label = "Field(\l    FieldNode {\l        field_id: \"field_dZ1hPWdKA3\",\l        descriptor: FieldNodeDescriptor {\l            name: \"message\",\l        },\l    },\l)\l" ]
    28 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_T0WnrnVHU2\",\l    },\l)\l" ]
    29 [ label = "Field(\l    FieldNode {\l        field_id: \"field_nZPLYXVLoE\",\l        descriptor: FieldNodeDescriptor {\l            name: \"statusCode\",\l        },\l    },\l)\l" ]
    30 [ label = "BatchCommit(\l    BatchCommitNode {\l        batch_id: \"2bf72d33-f352-42e3-be1d-54e8014fa1ec\",\l        created_at: \"2020-11-06T15:53:24.470Z\",\l    },\l)\l" ]
    31 [ label = "Shape(\l    ShapeNode {\l        shape_id: \"shape_qxsk3PMiAC\",\l    },\l)\l" ]
    32 [ label = "Field(\l    FieldNode {\l        field_id: \"field_fFNfMm41ym\",\l        descriptor: FieldNodeDescriptor {\l            name: \"rating\",\l        },\l    },\l)\l" ]
    4 -> 3 [ label = "IsParameterOf\l" ]
    7 -> 6 [ label = "IsParameterOf\l" ]
    10 -> 9 [ label = "IsParameterOf\l" ]
    13 -> 5 [ label = "IsDescendantOf\l" ]
    14 -> 5 [ label = "IsDescendantOf\l" ]
    15 -> 0 [ label = "IsDescendantOf\l" ]
    15 -> 16 [ label = "BelongsTo\l" ]
    16 -> 14 [ label = "IsFieldOf\l" ]
    17 -> 5 [ label = "IsDescendantOf\l" ]
    18 -> 0 [ label = "IsDescendantOf\l" ]
    18 -> 19 [ label = "BelongsTo\l" ]
    19 -> 17 [ label = "IsFieldOf\l" ]
    20 -> 8 [ label = "IsDescendantOf\l" ]
    21 -> 6 [ label = "IsDescendantOf\l" ]
    21 -> 22 [ label = "BelongsTo\l" ]
    22 -> 17 [ label = "IsFieldOf\l" ]
    21 -> 7 [ label = "HasBinding(\l    ShapeParameterBinding {\l        shape_id: \"shape_p5uOLpFNK8\",\l    },\l)\l" ]
    23 -> 5 [ label = "IsDescendantOf\l" ]
    24 -> 0 [ label = "IsDescendantOf\l" ]
    24 -> 25 [ label = "BelongsTo\l" ]
    25 -> 23 [ label = "IsFieldOf\l" ]
    26 -> 0 [ label = "IsDescendantOf\l" ]
    26 -> 27 [ label = "BelongsTo\l" ]
    27 -> 23 [ label = "IsFieldOf\l" ]
    28 -> 1 [ label = "IsDescendantOf\l" ]
    28 -> 29 [ label = "BelongsTo\l" ]
    29 -> 23 [ label = "IsFieldOf\l" ]
    31 -> 1 [ label = "IsDescendantOf\l" ]
    31 -> 32 [ label = "BelongsTo\l" ]
    32 -> 14 [ label = "IsFieldOf\l" ]
}

